!pip install -q transformers accelerate fastapi uvicorn pyngrok

import torch
import time
from transformers import AutoTokenizer, AutoModelForCausalLM
from fastapi import FastAPI
from pydantic import BaseModel
import nest_asyncio
from pyngrok import ngrok
import uvicorn


model_id = "ai4bharat/Airavata"

tokenizer = AutoTokenizer.from_pretrained(model_id)
tokenizer.pad_token = tokenizer.eos_token

model = AutoModelForCausalLM.from_pretrained(
    model_id,
    device_map={"": "cpu"},
    torch_dtype=torch.float32  # safer on CPU
)
model.eval()


def create_prompt_with_chat_format(messages, add_bos=False):
    prompt = ""
    for message in messages:
        role = message["role"]
        content = message["content"]
        if role == "user":
            prompt += "<|user|>\n" + content + "\n"
        elif role == "assistant":
            prompt += "<|assistant|>\n" + content + "\n"
    prompt += "<|assistant|>\n"
    if add_bos:
        prompt = "<s>" + prompt
    return prompt


app = FastAPI()

class PromptRequest(BaseModel):
    prompt: str
    max_new_tokens: int = 50

@app.post("/generate")
async def generate(req: PromptRequest):
    start = time.time()
    prompt = create_prompt_with_chat_format(
        [{"role": "user", "content": req.prompt}],
        add_bos=False
    )

    inputs = tokenizer(prompt, return_tensors="pt", padding=True).to("cpu")

    with torch.no_grad():
        output = model.generate(
            **inputs,
            max_new_tokens=req.max_new_tokens,
            do_sample=True,
            temperature=0.7
        )

    end = time.time()
    output_text = tokenizer.decode(output[0], skip_special_tokens=True)
    latency = end - start
    tokens_generated = output.shape[-1]
    throughput = tokens_generated / latency

    return {
        "generated_text": output_text,
        "latency_seconds": latency,
        "tokens_generated": tokens_generated,
        "throughput_tokens_per_sec": throughput
    }


nest_asyncio.apply()
public_url = ngrok.connect(8000)
print("ðŸš€ FastAPI is live at:", public_url)

uvicorn.run(app, host="0.0.0.0", port=8000)
